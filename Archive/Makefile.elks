# External ELKS application Makefile
TOPDIR = /Users/greg/net/elks-gh

###############################################################################
include $(TOPDIR)/.config
INCLUDES    = -I$(TOPDIR)/include -I$(TOPDIR)/libc/include -I$(TOPDIR)/elks/include
TINYPRINTF  = $(ELKSCMD_DIR)/lib/tiny_vfprintf.o

# Compiler variables for ELKS.
CC      = ia16-elf-gcc
HOSTCC  = cc
CFLBASE = -fno-inline -melks-libc -mtune=i8086 -Wall -Os
#CFLBASE += -mcmodel=small -mno-segment-relocation-stuff
CFLBASE += -mcmodel=medium -msegment-relocation-stuff -ffunction-sections
CFLAGS  = $(CFLBASE) $(WARNINGS) $(LOCALFLAGS) $(INCLUDES)
LD      = ia16-elf-gcc
LDFLAGS = $(CFLBASE)
AS      = ia16-elf-as
ASFLAGS = -mtune=i8086 --32-segelf
AR      = ia16-elf-ar

# Standard compilation rules.
.S.s:
	$(CC) -E -traditional $(INCLUDES) $(CCDEFS) -o $*.s $<

.S.o:
	$(CC) -E -traditional $(INCLUDES) $(CCDEFS) -o $*.tmp $<
	$(AS) $(ASFLAGS) -o $*.o $*.tmp
	rm -f $*.tmp

.s.o:
	$(AS) $(ASFLAGS) -o $*.o $<

.c.o:
	$(CC) $(CFLAGS) -c -o $*.o $<

###############################################################################

#-------------------------------------------------------------------
#        D - F L A T   M A K E F I L E  -  ELKS
#-------------------------------------------------------------------

TOPDIR = /Users/greg/net/elks-gh
SMALL=
FULL=

ifeq ($(SMALL),y)
PRGS = smallpad
else
PRGS = memopad
#PRGS = memopad huffc fixhelp memopad.hlp
endif

LIBS = libdflat.a

all: $(LIBS) $(PRGS)

clean:
	rm -f *.o *.a memopad smallpad huffc fixhelp memopad.hlp

ifeq ($(SMALL),y)
BUILDOPTS = -DBUILD_SMALL_DFLAT
endif

ifeq ($(FULL),y)
BUILDOPTS = -DBUILD_FULL_DFLAT
endif

CFLAGS += $(BUILDOPTS) -DELKS=1
CFLAGS += -Wno-pointer-sign
CFLAGS += -Wno-misleading-indentation -Wno-unused-function -Wno-unused-variable
#CFLAGS += -Wno-compare-distinct-pointer-types
#CFLAGS += -Wno-invalid-source-encoding
LDFLAGS += -maout-heap=0xffff

OBJS = memopad.o dialogs.o menus.o
memopad: $(OBJS) $(LIBS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS) -L. -ldflat
	cp $@ $(TOPDIR)/elkscmd/rootfs_template/root

SMALLOBJS = smallpad.o
smallpad: $(SMALLOBJS) $(LIBS)
	$(CC) $(LDFLAGS) -o $@ $(SMALLOBJS) -L. -ldflat
	cp $@ $(TOPDIR)/elkscmd/rootfs_template/root

CONSOBJS = cons.o runes.o kcp437.o
cons: $(CONSOBJS)
	$(LD) $(LDFLAGS) -o $@ $(CONSOBJS)
	cp cons $(TOPDIR)/elkscmd/rootfs_template/root

TTYOBJS = ttyinfo.o peekpoke.o runes.o unikey.o tty.o
ttyinfo: $(TTYOBJS)
	$(LD) $(LDFLAGS) -o $@ $(TTYOBJS)
	cp ttyinfo $(TOPDIR)/elkscmd/rootfs_template/root

MATRIXOBJS = matrix.o tty.o tty-cp437.o runes.o kcp437.o
matrix: $(MATRIXOBJS)
	$(CC) $(LDFLAGS) -o $@ $(MATRIXOBJS)
	cp $@ $(TOPDIR)/elkscmd/rootfs_template/root

TESTOBJS = test.o peekpoke.o
test: $(TESTOBJS)
	$(LD) $(LDFLAGS) -o $@ $(TESTOBJS)
	cp test $(TOPDIR)/elkscmd/rootfs_template/root

DFLATOBJS = \
    message.o keys.o \
    config.o dfalloc.o \
    window.o rect.o lists.o \
    normal.o applicat.o textbox.o \
    menubar.o menu.o popdown.o listbox.o \
    editbox.o editor.o \
    sysmenu.o \
    statbar.o

ifneq ($(SMALL),y)
DFLATOBJS += \
    dialbox.o msgbox.o \
    box.o text.o \
    button.o radio.o checkbox.o spinbutt.o \
    combobox.o slidebox.o \
    fileopen.o direct.o \
    pictbox.o calendar.o barchart.o \
    search.o clipbord.o \
    helpbox.o decomp.o \
    log.o \
    watch.o
endif

DFLATOBJS += \
    video.o events-unix.o mouse-ansi.o console-unix.o \
    kcp437.o runes.o unikey.o tty.o tty-cp437.o runshell.o

DFLATOBJS += v7malloc.o

$(LIBS): $(DFLATOBJS)
	$(AR) rcs $(LIBS) $(DFLATOBJS)

huff.o: huff.c
	$(HOSTCC) -c -o $@ $^
    
HUFFOBJS = huffc.o htree.o
huffc: $(HUFFOBJS)
	$(HOSTCC) $(LDFLAGS) -o $@ $(HUFFOBJS)

FIXHOBJS = fixhelp.o decomp.o
fixhelp: $(FIXHOBJS)
	$(HOSTCC) $(LDFLAGS) -o $@ $(FIXHOBJS)

memopad.hlp: memopad.txt huffc fixhelp
	./huffc memopad.txt memopad.hlp
	./fixhelp memopad
	cp mempad.hlp $(TOPDIR)/elkscmd/rootfs_template/root
